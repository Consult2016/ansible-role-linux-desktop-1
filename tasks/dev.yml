# Development environment setup

- name: Linux Desktop | Dev | Install Yarn key
  become: yes
  apt_key:
    url: https://dl.yarnpkg.com/debian/pubkey.gpg
    state: present

- name: Linux Desktop | Dev | Install Yarn repository
  become: yes
  file:
    path: /etc/apt/sources.list.d/yarn.list
    owner: root
    mode: 0644
    state: touch

- name: Linux Desktop | Dev | Install Yarn repository
  become: yes
  lineinfile:
    dest: /etc/apt/sources.list.d/yarn.list
    regexp: "deb http://dl.yarnpkg.com/debian/ stable main"
    line: "deb http://dl.yarnpkg.com/debian/ stable main"
    state: present

- name: Linux Desktop | Dev | Update apt cache
  become: yes
  apt:
    update_cache: yes

- name: Linux Desktop | Dev | Install the desktop environment for programming
  become: yes
  apt:
    state: present
    name:
      - yarn
      - git
      - tig
      - openjdk-11-jdk
      - maven
      - python3
      - python3-pip
      - bpython3

# To check the last version of kubectl check with
# curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt
- name: Linux Desktop | Dev | Install auxiliary tools
  become: yes
  get_url:
    url: "{{ item }}"
    dest: /usr/bin/
    mode: '0755'
  with_items:
    - https://dl.minio.io/client/mc/release/linux-amd64/mc
    - https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
    - https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64

- name: Linux Desktop | Dev | Install SpacEmacs
  git:
    repo: https://github.com/syl20bnr/spacemacs
    dest: ~/.emacs.d/
    update: yes
    clone: yes
    accept_hostkey: yes

- name: Linux Desktop | Dev | Configure git
  block:
    - name: Configuring a global git ignore
      git_config:
        name: core.excludefiles
        scope: global
        value: "~/.global-gitignore"
    - name: Configuring window memory
      git_config:
        name: pack.windowMemory
        scope: global
        value: "100m"
    - name: Configuring packet size limit
      git_config:
        name: pack.packetSizeLimit
        scope: global
        value: "512m"
    - name: Configuring threads
      git_config:
        name: pack.threads
        scope: global
        value: "1"
    - name: Configuring rebase autosquash
      git_config:
        name: rebase.autosquash
        scope: global
        value: "true"

- name: Linux Desktop | Dev | Configure git to use GPG
  block:
    - name: Linux Desktop | Dev | Configure git to sign with GPG
      git_config:
        name: commit.gpgsign
        scope: global
        value: "true"
    - name: Linux Desktop | Dev | Configure git sign key
      git_config:
        name: user.signingkey
        scope: global
        value: "{{ gpg_hash }}"
  when: gpg is defined
